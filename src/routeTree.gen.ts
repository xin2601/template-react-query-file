/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DefaultLayoutRouteImport } from './routes/_default-layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DefaultLayoutPostsRouteImport } from './routes/_default-layout/posts'
import { Route as DefaultLayoutHomeRouteImport } from './routes/_default-layout/home'

const DefaultLayoutRoute = DefaultLayoutRouteImport.update({
  id: '/_default-layout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DefaultLayoutPostsRoute = DefaultLayoutPostsRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => DefaultLayoutRoute,
} as any)
const DefaultLayoutHomeRoute = DefaultLayoutHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => DefaultLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/home': typeof DefaultLayoutHomeRoute
  '/posts': typeof DefaultLayoutPostsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/home': typeof DefaultLayoutHomeRoute
  '/posts': typeof DefaultLayoutPostsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_default-layout': typeof DefaultLayoutRouteWithChildren
  '/_default-layout/home': typeof DefaultLayoutHomeRoute
  '/_default-layout/posts': typeof DefaultLayoutPostsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/home' | '/posts'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/home' | '/posts'
  id:
    | '__root__'
    | '/'
    | '/_default-layout'
    | '/_default-layout/home'
    | '/_default-layout/posts'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DefaultLayoutRoute: typeof DefaultLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_default-layout': {
      id: '/_default-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DefaultLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_default-layout/posts': {
      id: '/_default-layout/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof DefaultLayoutPostsRouteImport
      parentRoute: typeof DefaultLayoutRoute
    }
    '/_default-layout/home': {
      id: '/_default-layout/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof DefaultLayoutHomeRouteImport
      parentRoute: typeof DefaultLayoutRoute
    }
  }
}

interface DefaultLayoutRouteChildren {
  DefaultLayoutHomeRoute: typeof DefaultLayoutHomeRoute
  DefaultLayoutPostsRoute: typeof DefaultLayoutPostsRoute
}

const DefaultLayoutRouteChildren: DefaultLayoutRouteChildren = {
  DefaultLayoutHomeRoute: DefaultLayoutHomeRoute,
  DefaultLayoutPostsRoute: DefaultLayoutPostsRoute,
}

const DefaultLayoutRouteWithChildren = DefaultLayoutRoute._addFileChildren(
  DefaultLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DefaultLayoutRoute: DefaultLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
